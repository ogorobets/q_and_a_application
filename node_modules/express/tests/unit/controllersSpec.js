'use strict';

/* jasmine specs for controllers go here */
describe('npAdmin controllers', function () {

    beforeEach(module('npAdmin'));

    beforeEach(function () {
        jasmine.addMatchers({
            toEqualData: function (util, customEqualityTesters) {
                return {
                    compare: function (actual, expected) {
                        return {
                            pass: angular.equals(actual, expected)
                        };
                    }
                };
            }
        });
    });

    describe('AllQuestionsCtrl', function () {
        var scope, $httpBackend, ctrl;
        var questionsInitData = function () {
            return [{
                _id: 1,
                answer_ids: [1111, 2222],
                title: 'question 1',
                tags: ['ANSI C', 'C++'],
                author: {user_name: 'Jack'}
            },
            {
                _id: 2,
                answer_ids: [3333, 4444],
                title: 'question 2',
                tags: ['JS', 'CSS'],
                author: {user_name: 'Jim'}
            }];
        };

        var allQuestionsData = function () {
            return [{
                _id: 1,
                answersAmount: 2,
                summary: 'question 1',
                tags: ['ANSI C', 'C++'],
                author: 'Jack'
            },
            {
                _id: 2,
                answersAmount: 2,
                summary: 'question 2',
                tags: ['JS', 'CSS'],
                author: 'Jim'
            }];
        };

        var stateParams = {questionsType: 'all'};

        beforeEach(inject(function (_$httpBackend_, $rootScope, $controller) {
            $httpBackend = _$httpBackend_;
            $httpBackend.expectGET('/get-questions').respond(200, questionsInitData());

            scope = $rootScope.$new();
            ctrl = $controller('AllQuestionsCtrl', {$scope: scope, $stateParams: stateParams});
        }));

        it('should fetch all questions data', function () {
            expect(scope.questions).toBeUndefined();
            $httpBackend.flush();
            expect(scope.questions).toEqualData(allQuestionsData());
        });
    });
});